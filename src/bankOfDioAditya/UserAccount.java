/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bankOfDioAditya;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dio Aditya Putra Wardhono
 */
public class UserAccount extends javax.swing.JInternalFrame {

    private static final long serialVersionUID = 1L;

    private Connection conn;
    private ResultSet rs;
    private PreparedStatement insert;
    private int selectedID;

    /**
     * Creates new form UserAccount
     */
    public UserAccount() {
        initComponents();
        DeleteButton.setEnabled(false);
        UpdateButton.setEnabled(false);
        tableUpdate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    public void tableUpdate() {
        Vector vec;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            setConn(DriverManager.getConnection(
                    "jdbc:mysql://localhost/bank_of_dio_aditya", "root", ""
            ));
            Statement stmt = getConn().createStatement();
            setRs(stmt.executeQuery("select id, username from user"));

            DefaultTableModel dft;
            dft = (DefaultTableModel) UserAccountTable.getModel();
            dft.setRowCount(0);

            while (getRs().next()) {
                vec = new Vector();

                vec.add(getRs().getString(1));
                vec.add(getRs().getString(2));

                dft.addRow(vec);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(CustomerReport.class.getName()).log(
                    Level.SEVERE, null, ex
            );
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        UserAccountTitleLabel = new javax.swing.JLabel();
        UsernameLabel = new javax.swing.JLabel();
        PasswordLabel = new javax.swing.JLabel();
        UsernameTextField = new javax.swing.JTextField();
        UpdateButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        AddButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        UserAccountTable = new javax.swing.JTable();
        PasswordField = new javax.swing.JPasswordField();

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        UserAccountTitleLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        UserAccountTitleLabel.setText("User Account");

        UsernameLabel.setText("Username");

        PasswordLabel.setText("Password");

        UsernameTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UsernameTextFieldMouseClicked(evt);
            }
        });

        UpdateButton.setText("Update");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        AddButton.setText("Add");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        CancelButton.setText("Cancel");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        UserAccountTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Id", "Username"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        UserAccountTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UserAccountTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(UserAccountTable);
        if (UserAccountTable.getColumnModel().getColumnCount() > 0) {
            UserAccountTable.getColumnModel().getColumn(0).setResizable(false);
            UserAccountTable.getColumnModel().getColumn(1).setResizable(false);
        }

        PasswordField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PasswordFieldMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(UserAccountTitleLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(AddButton)
                                .addGap(18, 18, 18)
                                .addComponent(DeleteButton)
                                .addGap(18, 18, 18)
                                .addComponent(UpdateButton)
                                .addGap(18, 18, 18)
                                .addComponent(CancelButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(UsernameLabel)
                                    .addComponent(PasswordLabel))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PasswordField)
                                    .addComponent(UsernameTextField))
                                .addGap(97, 97, 97)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(UserAccountTitleLabel)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(UsernameLabel)
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(PasswordLabel)
                                    .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(UsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(98, 98, 98)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(DeleteButton)
                                    .addComponent(AddButton)
                                    .addComponent(UpdateButton)
                                    .addComponent(CancelButton))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        dispose();
    }//GEN-LAST:event_CancelButtonActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        // TODO add your handling code here:
        try {
            String username = UsernameTextField.getText();
            String password = String.valueOf(PasswordField.getPassword());
            Class.forName("com.mysql.cj.jdbc.Driver");
            setConn(DriverManager.getConnection(
                    "jdbc:mysql://localhost/bank_of_dio_aditya", "root", ""
            ));
            setInsert(getConn().prepareStatement("insert into user(username,password)"
                    + " values(?,?)"));
            getInsert().setString(1, username);
            getInsert().setString(2, password);
            getInsert().executeUpdate();

            JOptionPane.showMessageDialog(this, "New User Added");

            UsernameTextField.setText("");
            PasswordField.setText("");
            UsernameTextField.requestFocus();

            tableUpdate();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(CustomerReport.class.getName()).log(
                    Level.SEVERE, null, ex
            );
        }
    }//GEN-LAST:event_AddButtonActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        try {
            // TODO add your handling code here:
            String username = UsernameTextField.getText();
            String password = String.valueOf(PasswordField.getPassword());

            Class.forName("com.mysql.cj.jdbc.Driver");
            setConn(DriverManager.getConnection(
                    "jdbc:mysql://localhost/bank_of_dio_aditya", "root", ""
            ));
            setInsert(getConn().prepareStatement("update user set username = ?, "
                    + "password = ? where id = ?"));
            getInsert().setString(1, username);
            getInsert().setString(2, password);
            getInsert().setInt(3, getSelectedID());
            getInsert().executeUpdate();

            JOptionPane.showMessageDialog(this, "User Updated");

            UsernameTextField.setText("");
            PasswordField.setText("");
            UsernameTextField.requestFocus();
            UserAccountTable.clearSelection();
            DeleteButton.setEnabled(false);
            UpdateButton.setEnabled(false);
            AddButton.setEnabled(true);

            tableUpdate();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(UserAccount.class.getName()).log(
                    Level.SEVERE, null, ex
            );
        }
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void UserAccountTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserAccountTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel uac_table;
        uac_table = (DefaultTableModel) UserAccountTable.getModel();
        int selectedRow = UserAccountTable.getSelectedRow();
        setSelectedID(Integer.parseInt(
                uac_table.getValueAt(selectedRow, 0).toString()
        ));

        DeleteButton.setEnabled(true);
        UpdateButton.setEnabled(true);
        AddButton.setEnabled(false);
    }//GEN-LAST:event_UserAccountTableMouseClicked

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
        int dialogResult = JOptionPane.showConfirmDialog(null,
                "Are you sure you want to delete this user?", "WARNING",
                JOptionPane.YES_NO_OPTION
        );

        if (dialogResult == JOptionPane.YES_OPTION) {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                setConn(DriverManager.getConnection(
                        "jdbc:mysql://localhost/bank_of_dio_aditya", "root", ""
                ));
                setInsert(getConn().prepareStatement("delete from user "
                        + "where id = ?")
                );
                getInsert().setInt(1, getSelectedID());
                getInsert().executeUpdate();

                JOptionPane.showMessageDialog(this, "User Deleted");

            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(UserAccount.class.getName()).log(
                        Level.SEVERE, null, ex
                );
            }
        }

        UsernameTextField.requestFocus();
        UserAccountTable.clearSelection();
        DeleteButton.setEnabled(false);
        UpdateButton.setEnabled(false);
        AddButton.setEnabled(true);

        tableUpdate();
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        DeleteButton.setEnabled(false);
        UpdateButton.setEnabled(false);
        AddButton.setEnabled(true);
        UsernameTextField.requestFocus();
        UserAccountTable.clearSelection();
    }//GEN-LAST:event_formMouseClicked

    private void UsernameTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UsernameTextFieldMouseClicked
        // TODO add your handling code here:
        DeleteButton.setEnabled(false);
        UpdateButton.setEnabled(false);
        AddButton.setEnabled(true);
        UserAccountTable.clearSelection();
    }//GEN-LAST:event_UsernameTextFieldMouseClicked

    private void PasswordFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PasswordFieldMouseClicked
        // TODO add your handling code here:
        DeleteButton.setEnabled(false);
        UpdateButton.setEnabled(false);
        AddButton.setEnabled(true);
        UserAccountTable.clearSelection();
    }//GEN-LAST:event_PasswordFieldMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JButton CancelButton;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JTable UserAccountTable;
    private javax.swing.JLabel UserAccountTitleLabel;
    private javax.swing.JLabel UsernameLabel;
    private javax.swing.JTextField UsernameTextField;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the conn
     */
    public Connection getConn() {
        return conn;
    }

    /**
     * @param conn the conn to set
     */
    public void setConn(Connection conn) {
        this.conn = conn;
    }

    /**
     * @return the rs
     */
    public ResultSet getRs() {
        return rs;
    }

    /**
     * @param rs the rs to set
     */
    public void setRs(ResultSet rs) {
        this.rs = rs;
    }

    /**
     * @return the insert
     */
    public PreparedStatement getInsert() {
        return insert;
    }

    /**
     * @param insert the insert to set
     */
    public void setInsert(PreparedStatement insert) {
        this.insert = insert;
    }

    /**
     * @return the selectedID
     */
    public int getSelectedID() {
        return selectedID;
    }

    /**
     * @param selectedID the selectedID to set
     */
    public void setSelectedID(int selectedID) {
        this.selectedID = selectedID;
    }
}
